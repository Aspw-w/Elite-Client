package com.instrumentalist.elite.hacks.features.exploit.disablermode;

import com.instrumentalist.elite.events.features.*;
import com.instrumentalist.elite.hacks.features.exploit.Disabler;
import com.instrumentalist.elite.hacks.features.exploit.disablermode.features.CubecraftDisabler;
import com.instrumentalist.elite.hacks.features.exploit.disablermode.features.HypixelDisabler;
import com.instrumentalist.elite.hacks.features.exploit.disablermode.features.MinibloxDisabler;
import com.instrumentalist.elite.utils.value.ListValue;

public class DisablerModeManager {

    private final ListValue disablerMode;
    public DisablerEvent currentMode;

    public DisablerModeManager(ListValue flyMode) {
        this.disablerMode = flyMode;
        updateCurrentMode();
    }

    private void updateCurrentMode() {
        switch (disablerMode.get().toLowerCase()) {
            case "hypixel":
                currentMode = new HypixelDisabler();
                break;
            case "cubecraft":
                currentMode = new CubecraftDisabler();
                break;
            case "miniblox":
                currentMode = new MinibloxDisabler();
                break;
            default:
                currentMode = null;
        }
    }

    public void onUpdate(UpdateEvent event) {
        if (!disablerMode.get().equals(currentMode.getName())) {
            Disabler.onDisableFunctions();
            updateCurrentMode();
            Disabler.onEnableFunctions();
        }

        if (currentMode != null)
            currentMode.onUpdate(event);
    }

    public void onMotion(MotionEvent event) {
        if (currentMode != null)
            currentMode.onMotion(event);
    }

    public void onTick(TickEvent event) {
        if (currentMode != null)
            currentMode.onTick(event);
    }

    public void onSendPacket(SendPacketEvent event) {
        if (currentMode != null)
            currentMode.onSendPacket(event);
    }

    public void onReceivedPacket(ReceivedPacketEvent event) {
        if (currentMode != null)
            currentMode.onReceivedPacket(event);
    }

    public void onWorld(WorldEvent event) {
        if (currentMode != null)
            currentMode.onWorld(event);
    }

    public void onAttack(AttackEvent event) {
        if (currentMode != null)
            currentMode.onAttack(event);
    }
}
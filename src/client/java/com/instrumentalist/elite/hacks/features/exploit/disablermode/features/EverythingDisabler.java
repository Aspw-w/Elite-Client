package com.instrumentalist.elite.hacks.features.exploit.disablermode.features;

import com.instrumentalist.elite.events.features.*;
import com.instrumentalist.elite.hacks.features.exploit.disablermode.DisablerEvent;
import com.instrumentalist.elite.utils.ChatUtil;
import com.instrumentalist.elite.utils.IMinecraft;
import com.instrumentalist.elite.utils.packet.PacketUtil;
import net.minecraft.network.packet.Packet;
import net.minecraft.network.packet.c2s.common.CommonPongC2SPacket;
import net.minecraft.network.packet.c2s.play.CloseHandledScreenC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerInputC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import net.minecraft.network.packet.c2s.play.TeleportConfirmC2SPacket;
import net.minecraft.network.packet.s2c.play.CloseScreenS2CPacket;
import net.minecraft.network.packet.s2c.play.PlayerPositionLookS2CPacket;

public class EverythingDisabler implements DisablerEvent {

    @Override
    public String getName() {
        return "Everything";
    }

    public static int godTick = 0;

    @Override
    public void onUpdate(UpdateEvent event) {
    }

    @Override
    public void onMotion(MotionEvent event) {
    }

    @Override
    public void onTick(TickEvent event) {
    }

    @Override
    public void onAttack(AttackEvent event) {
    }

    @Override
    public void onSendPacket(SendPacketEvent event) {
        if (IMinecraft.mc.player == null) return;

        Packet<?> packet = event.packet;

        if (packet instanceof CommonPongC2SPacket) {
            if (((CommonPongC2SPacket) packet).getParameter() == 0)
                event.cancel();

            if (((CommonPongC2SPacket) packet).getParameter() > 0) {
                int safe = Math.abs(((CommonPongC2SPacket) packet).getParameter());
                PacketUtil.sendPacketAsSilent(new CommonPongC2SPacket(safe));
                event.cancel();
            }
        }
    }

    @Override
    public void onReceivedPacket(ReceivedPacketEvent event) {
    }

    @Override
    public void onWorld(WorldEvent event) {
    }
}
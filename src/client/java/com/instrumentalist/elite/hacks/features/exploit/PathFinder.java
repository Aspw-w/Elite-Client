package com.instrumentalist.elite.hacks.features.exploit;

import com.instrumentalist.elite.Client;
import com.instrumentalist.elite.events.features.UpdateEvent;
import com.instrumentalist.elite.hacks.Module;
import com.instrumentalist.elite.hacks.ModuleCategory;
import com.instrumentalist.elite.utils.value.IntValue;
import com.instrumentalist.elite.utils.value.ListValue;
import org.lwjgl.glfw.GLFW;

import java.util.Arrays;

public class PathFinder extends Module {

    public PathFinder() {
        super("Path Finder", ModuleCategory.Exploit, GLFW.GLFW_KEY_UNKNOWN, true, true);
    }

    public static final ListValue mode = new ListValue(
            "Mode",
            Arrays.asList("Reconstruct", "Linear").toArray(new String[0]),
            "Reconstruct"
    );

    public static final IntValue linearSteps = new IntValue(
            "Linear Steps",
            5,
            1,
            10,
            () -> mode.get().equalsIgnoreCase("linear")
    );

    @Override
    public String tag() {
        return mode.get();
    }

    @Override
    public void onDisable() {
        if (Client.loaded)
            this.toggle();
    }

    @Override
    public void onEnable() {
    }
}

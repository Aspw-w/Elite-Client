package com.instrumentalist.elite.hacks.features.exploit.disablermode.features;

import com.instrumentalist.elite.events.features.*;
import com.instrumentalist.elite.hacks.features.exploit.Disabler;
import com.instrumentalist.elite.hacks.features.exploit.disablermode.DisablerEvent;
import com.instrumentalist.elite.utils.ChatUtil;
import com.instrumentalist.elite.utils.IMinecraft;
import com.instrumentalist.elite.utils.move.MovementUtil;
import com.instrumentalist.elite.utils.packet.PacketUtil;
import net.minecraft.entity.Entity;
import net.minecraft.network.packet.Packet;
import net.minecraft.network.packet.c2s.common.CommonPongC2SPacket;

public class CubecraftDisabler implements DisablerEvent {

    @Override
    public String getName() {
        return "Cubecraft";
    }

    public static int godTick = 0;

    @Override
    public void onUpdate(UpdateEvent event) {
    }

    @Override
    public void onMotion(MotionEvent event) {
    }

    @Override
    public void onTick(TickEvent event) {
    }

    @Override
    public void onAttack(AttackEvent event) {
        if (IMinecraft.mc.player == null) return;

        Entity target = event.entity;

        if (target != IMinecraft.mc.player && IMinecraft.mc.player.distanceTo(target) >= 3f)
            event.cancel();
    }

    @Override
    public void onSendPacket(SendPacketEvent event) {
        if (IMinecraft.mc.player == null) return;

        Packet<?> packet = event.packet;

        if (packet instanceof CommonPongC2SPacket) {
            int parameter = ((CommonPongC2SPacket) packet).getParameter();
            if (parameter <= 0) {
                godTick++;
            } else {
                if (godTick >= 480) {
                    event.cancel();
                    ChatUtil.printChat("GOD " + parameter);
                    for (int i = 0; i <= 5; i++) {
                        PacketUtil.sendPacketAsSilent(new CommonPongC2SPacket(parameter + i));
                    }
                    godTick = 0;
                } else {
                    event.cancel();
                }
            }
        }
    }

    @Override
    public void onReceivedPacket(ReceivedPacketEvent event) {
    }

    @Override
    public void onWorld(WorldEvent event) {
    }
}